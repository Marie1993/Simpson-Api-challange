{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\DEV\\\\VScode\\\\JS\\\\Simpson-Api\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport QuoteCard from './QuoteCard';\nimport { simpsonList } from './Components/SimpsonList';\nimport DisplaySimpson from './Components/DisplaySimpson';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quoteList, setQuoteList] = React.useState(simpsonList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSimsonOnly,\n      children: [\"Show only Simson : \", showSimsonOnly ? 'ON' : 'OFF']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplaySimpson, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"FuG493y9FBRYM5Ze5LhBq8v0WxY=\");\n\n_c = App;\nexport default App; // export default class DisplaySimpson extends React.Component {\n//     state = {\n//       simpsons: [],\n//     };\n//     getSimpson() {\n//       axios\n//         .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\n//         .then((res) => {\n//           console.log(res);\n//           this.setState({ simpsons: res.data });\n//         });\n//       console.log(response.data);\n//     }\n//     render() {\n//       return (\n//         <ul>\n//           {this.state.simpsons.map((simpson) => (\n//             <li>{simpson.character}</li>\n//           ))}\n//         </ul>\n//       );\n//     }\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/VScode/JS/Simpson-Api/src/App.js"],"names":["React","QuoteCard","simpsonList","DisplaySimpson","App","quoteList","setQuoteList","useState","toggleSimsonOnly","showSimsonOnly"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAeL,WAAf,CAAlC;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEM,gBAAjB;AAAA,wCACsBC,cAAc,GAAG,IAAH,GAAU,KAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAiBD;;GAtBQL,G;;KAAAA,G;AAwBT,eAAeA,GAAf,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport QuoteCard from './QuoteCard';\r\nimport { simpsonList } from './Components/SimpsonList';\r\nimport DisplaySimpson from './Components/DisplaySimpson';\r\n\r\nfunction App() {\r\n  const [quoteList, setQuoteList] = React.useState(simpsonList);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <button onClick={toggleSimsonOnly}>\r\n        Show only Simson : {showSimsonOnly ? 'ON' : 'OFF'}\r\n      </button>\r\n      <DisplaySimpson />\r\n      {/* <div>\r\n        {quoteList\r\n          .filter(\r\n            (quote) => !showSimsonOnly || quote.character.includes('Simpson')\r\n          )\r\n          .map((quote, index) => (\r\n            <QuoteCard key={index} {...quote} />\r\n          ))}\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// export default class DisplaySimpson extends React.Component {\r\n//     state = {\r\n//       simpsons: [],\r\n//     };\r\n  \r\n//     getSimpson() {\r\n//       axios\r\n//         .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           this.setState({ simpsons: res.data });\r\n//         });\r\n//       console.log(response.data);\r\n//     }\r\n  \r\n//     render() {\r\n//       return (\r\n//         <ul>\r\n//           {this.state.simpsons.map((simpson) => (\r\n//             <li>{simpson.character}</li>\r\n//           ))}\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n"]},"metadata":{},"sourceType":"module"}