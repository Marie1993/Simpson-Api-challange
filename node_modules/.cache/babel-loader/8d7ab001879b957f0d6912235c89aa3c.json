{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\DEV\\\\VScode\\\\JS\\\\Simpson-Api\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport DisplaySimpson from './Components/DisplaySimpson';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quoteList, setQuoteList] = React.useState({});\n  const [isClicked, setIsClicked] = React.useState(false);\n\n  const getSimpson = () => {\n    axios.get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num').then(res => {\n      setQuoteList(res.data[0]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getSimpson,\n      children: \" ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplaySimpson, {\n      quoteList: quoteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"OKl3I2QAQJ7pQj5gUJJxGGXv7ps=\");\n\n_c = App;\nexport default App; // export default class DisplaySimpson extends React.Component {\n//     state = {\n//       simpsons: [],\n//     };\n//     getSimpson() {\n//       axios\n//         .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\n//         .then((res) => {\n//           console.log(res);\n//           this.setState({ simpsons: res.data });\n//         });\n//       console.log(response.data);\n//     }\n//     render() {\n//       return (\n//         <ul>\n//           {this.state.simpsons.map((simpson) => (\n//             <li>{simpson.character}</li>\n//           ))}\n//         </ul>\n//       );\n//     }\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/VScode/JS/Simpson-Api/src/App.js"],"names":["axios","React","DisplaySimpson","App","quoteList","setQuoteList","useState","isClicked","setIsClicked","getSimpson","get","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACK,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvBT,IAAAA,KAAK,CACFU,GADH,CACO,4DADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbP,MAAAA,YAAY,CAACO,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAD,CAAZ;AACD,KAJH;AAKD,GAND;;AAQA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEL;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport DisplaySimpson from './Components/DisplaySimpson';\r\n\r\nfunction App() {\r\n  const [quoteList, setQuoteList] = React.useState({});\r\n  const [isClicked, setIsClicked] = React.useState(false);\r\n\r\n  const getSimpson = () => {\r\n    axios\r\n      .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\r\n      .then((res) => {\r\n        setQuoteList(res.data[0]);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={getSimpson}> ok</button>\r\n      <DisplaySimpson quoteList={quoteList} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// export default class DisplaySimpson extends React.Component {\r\n//     state = {\r\n//       simpsons: [],\r\n//     };\r\n\r\n//     getSimpson() {\r\n//       axios\r\n//         .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           this.setState({ simpsons: res.data });\r\n//         });\r\n//       console.log(response.data);\r\n//     }\r\n\r\n//     render() {\r\n//       return (\r\n//         <ul>\r\n//           {this.state.simpsons.map((simpson) => (\r\n//             <li>{simpson.character}</li>\r\n//           ))}\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n"]},"metadata":{},"sourceType":"module"}