{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\DEV\\\\VScode\\\\JS\\\\Simpson-Api\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport QuoteCard from './QuoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSimsonOnly, setShowSimsonOnly] = React.useState(false);\n  const [quoteList, setQuoteList] = React.useState([]);\n\n  class SimpsonList {\n    constructor() {\n      this.state = {\n        simpsons: []\n      };\n    }\n\n    componentFunction() {\n      // Send the request\n      axios.get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num') // Extract the DATA from the received response\n      .then(res => {\n        console.log(res);\n        this.set;\n      });\n      console.log(response.data);\n    }\n\n    render() {\n      {\n        this.state.perso;\n      }\n    }\n\n  }\n\n  function toggleSimsonOnly() {\n    setShowSimsonOnly(!showSimsonOnly);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSimsonOnly,\n      children: [\"Show only Simson : \", showSimsonOnly ? 'ON' : 'OFF']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: quoteList.filter(quote => !showSimsonOnly || quote.character.includes('Simpson')).map((quote, index) => /*#__PURE__*/_jsxDEV(QuoteCard, { ...quote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"RFtEykPCq/rvcwqwsPobknRNSWk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Documents/DEV/VScode/JS/Simpson-Api/src/App.js"],"names":["React","QuoteCard","App","showSimsonOnly","setShowSimsonOnly","useState","quoteList","setQuoteList","SimpsonList","state","simpsons","componentFunction","axios","get","then","res","console","log","set","response","data","render","perso","toggleSimsonOnly","filter","quote","character","includes","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;;AAGF,QAAMG,WAAN,CAAkB;AAAA;AAAA,WACdC,KADc,GACN;AACJC,QAAAA,QAAQ,EAAE;AADN,OADM;AAAA;;AAKdC,IAAAA,iBAAiB,GAAG;AAChB;AACAC,MAAAA,KAAK,CACFC,GADH,CACO,4DADP,EAEE;AAFF,OAGGC,IAHH,CAGQC,GAAG,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACd,aAAKG,GAAL;AAAS,OAJX;AAKEF,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,IAArB;AAGH;;AAACC,IAAAA,MAAM,GAAI;AACV;AAAC,aAAKZ,KAAL,CAAWa,KAAX;AAAiB;AACnB;;AAjBW;;AAoBhB,WAASC,gBAAT,GAA4B;AAC1BnB,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEoB,gBAAjB;AAAA,wCACsBpB,cAAc,GAAG,IAAH,GAAU,KAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGG,SAAS,CACPkB,MADF,CAEIC,KAAD,IAAW,CAACtB,cAAD,IAAmBsB,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,SAAzB,CAFjC,EAIEC,GAJF,CAIM,CAACH,KAAD,EAAQI,KAAR,kBACH,QAAC,SAAD,OAA2BJ;AAA3B,SAAgBI,KAAhB;AAAA;AAAA;AAAA;AAAA,cALH;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgBD;;GA7CQ3B,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport QuoteCard from './QuoteCard';\r\n\r\nfunction App() {\r\n  const [showSimsonOnly, setShowSimsonOnly] = React.useState(false);\r\n  const [quoteList, setQuoteList] = React.useState([\r\n  ]);\r\n\r\nclass SimpsonList {\r\n    state = {\r\n        simpsons: []\r\n    }\r\n\r\n    componentFunction() {\r\n        // Send the request\r\n        axios\r\n          .get('https://simpsons-quotes-api.herokuapp.com/quotes?count=num')\r\n          // Extract the DATA from the received response\r\n          .then(res => {console.log(res);\r\n          this.set})\r\n          console.log(response.data)\r\n \r\n         \r\n      } render () {\r\n        {this.state.perso}\r\n      }\r\n}\r\n\r\n  function toggleSimsonOnly() {\r\n    setShowSimsonOnly(!showSimsonOnly);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={toggleSimsonOnly}>\r\n        Show only Simson : {showSimsonOnly ? 'ON' : 'OFF'}\r\n      </button>\r\n      <div>\r\n        {quoteList\r\n          .filter(\r\n            (quote) => !showSimsonOnly || quote.character.includes('Simpson')\r\n          )\r\n          .map((quote, index) => (\r\n            <QuoteCard key={index} {...quote} />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}